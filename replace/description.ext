|1|
respawn = 1;
respawndelay = 3;
respawnOnStart = 0;
respawnTemplates[] = {"Seagull","f_spectator","f_JIP"};
|1|
respawn = 1;
respawndelay = 3;
respawnOnStart = 0;
respawnTemplates[] = {"Seagull"};
ReviveMode = 1;
ReviveUnconsciousStateMode = 1;
ReviveRequiredTrait = 0;
ReviveRequiredItems = 2;
ReviveRequiredItemsFakConsumed = 1;
ReviveMedicSpeedMultiplier = 2;
reviveDelay = 6;
reviveForceRespawnDelay = 99999;
reviveBleedOutDelay = 240;
|2|

// F3 - Radio Systems Support
// Credits: Please see the F3 online manual (http://www.ferstaberinde.com/f3/en/)

    class f_param_radios
    {
            title = "Radio System";
            values[] = {0,1,2,3};
            texts[] = {"Off","ACRE","TFR","ACRE2"};
            default = 0;
            code = "f_var_radios = %1";
    };

// ============================================================================================

// F3 - Medical Systems Support
// Credits: Please see the F3 online manual (http://www.ferstaberinde.com/f3/en/)

    class f_param_medical
    {
            title = "Medical System";
            values[] = {0,1,2};
            texts[] = {"Arma 3 Default","F3 Simple Wounding System","Authentic Gameplay Mod"};
            default = 1;
            code = "f_var_medical = %1";
    };

|2|
// This is a replace line
|3|

// F3 - Caching
// Credits: Please see the F3 online manual (http://www.ferstaberinde.com/f3/en/)

	class f_param_caching
	{
		title = "Cache AI outside distance (m)";
		values[] = {0,600,800,1000,1500,2000};
		default = 0;
	};

|3|
// This is a replace line
|4|
class CfgFunctions
{
	//ws_fnc
	#include "ws_fnc\config.hpp"

	class F // Defines the "owner"
	{
		class common // category
		{
			file = "f\common";
			// Defines the function to preInit (the paramArray dosent seem to be constructed at preInit stage).
			class processParamsArray
			{
				preInit = 1;
				postInit = 1;
			};

			class nearPlayer{};
		};
		class mpEnd
		{
			file = "f\mpEnd";
			class mpEnd{};
			class mpEndReceiver{};
		};
		class assignGear
		{
			// Defines the functions to preInit the compling of the assignGear function used by units.
			file = "f\assignGear";
			class assignGear{};
		};
		class setGroupID
		{
			file = "f\setGroupID";
			class setGroupID{};
		};
		class missionConditions
		{
			file = "f\missionConditions";
			class SetTime{};
			class SetFog{};
			class SetWeather{};
		};
		class cache
		{
			file = "f\cache";
			class cInit {};
			class cTracker {};
			class gCache {};
			class gUncache {};
		};
		class groupMarkers {
			file = "f\groupMarkers";
			class localGroupMarker{};
			class localSpecialistMarker{};
		};
		class authorisedCrew
		{
			file = "f\authorisedCrew";
			class authorisedCrewCheck {};
		};
		class FTMemberMarkers
		{
			file = "f\FTMemberMarkers";
			class SetLocalFTMemberMarkers{};
			class GetMarkerColor{};
			class LocalFTMarkerSync{};
		};
		class bodyRemoval
		{
			file = "f\removeBody";
			class removeBody{};
		};
		class setAISkill
		{
			file = "f\setAISKill";
			class setAISKill{};
		};
		class mapClickTeleport
		{
			file = "f\mapClickTeleport";
			class mapClickTeleportUnit{};
			class mapClickTeleportGroup{};
		};
		class nametag
		{
			file = "f\nametag";
			class drawNameTag{};
		};
		class preMount
		{
			file = "f\preMount";
			class mountGroups{};
		};
		class zeus
		{
			file = "f\zeus";
			class zeusInit{};
			class zeusAddAddons{};
			class zeusAddObjects{};
		};
		class acre
		{
			file = "f\radios\acre";
			class acre_removeRadios{};
			class acre_addRadios{};
			class acre_setRadioFrequencies{};
			class acre_configureSpectatorChat{};
		};
		class tfr
		{
			file = "f\radios\tfr";
			class tfr_removeRadios{};
			class tfr_addRadios{};
			class tfr_setRadioFrequencies{};
			class tfr_configureSpectatorChat{};
		};
		class safeStart
		{
			file = "f\safeStart";
			class safety{};
		};
		#include "f\simplewoundingsystem\config.hpp"
		#include "f\spect\functions.hpp"

	};
};

|4|
class CfgFunctions
{
	#include "f\functions.hpp"

	#include "ws_fnc\config.hpp"
};
|5|

// F3 - Caching
// Credits: Please see the F3 online manual (http://www.ferstaberinde.com/f3/en/)

	class f_param_caching
	{
		title = "Cache AI outside distance (m)";
		values[] = {0,600,800,1000,1500,2000};
		default = 0;
		code = "f_param_caching = %1";
	};

// ============================================================================================
|5|
//This is a replace line
|6|

// F3 - Respawn Templates
// Credits: Please see the F3 online manual (http://www.ferstaberinde.com/f3/en/)

class CfgRespawnTemplates
{
	// F3 Spectator Script
	class f_Spectator
	{
		onPlayerRespawn = "f_fnc_CamInit";
	};
  	//Overwrite Vanilla Seagull
    class Seagull
    {
        onPlayerRespawn = "";
    };
	// F3 JIP Menu
	class f_JIP
	{
		onPlayerRespawn = "f\JIP\f_JIP_playerRespawn.sqf";
	};
};
|6|
class CfgRespawnTemplates
{
    class Seagull
    {
		onPlayerRespawn = "f\spect\fn_activateSpectator.sqf";
    };
};
|7|

// Menu components for the Spectator Script
#include "f\spect\config.hpp"

// ============================================================================================

// F3 - Functions
// DO NOT REMOVE OR DISABLE THIS BLOCK OF CODE
|7|
//This is a replace line
|8|

// F3 - Radio Systems Support
// Credits: Please see the F3 online manual (http://www.ferstaberinde.com/f3/en/)

    class f_param_radios
    {
            title = "Radio System";
            values[] = {0,2,3};
            texts[] = {"Off","TFR","ACRE2"};
            default = 0;
    };

// ============================================================================================

// F3 - Medical Systems Support
// Credits: Please see the F3 online manual (http://www.ferstaberinde.com/f3/en/)

    class f_param_medical
    {
            title = "Medical System";
            values[] = {0,1};
            texts[] = {"Arma 3 Default","F3 Simple Wounding System"};
            default = 1;
    };

// ============================================================================================
|8|
//This is a replace line
|9|
class CfgFunctions
{
	#include "f\common\functions.hpp"

	#include "ws_fnc\config.hpp"
};
|9|
class CfgFunctions
{
	#include "f\functions.hpp"

	#include "ws_fnc\config.hpp"
};
